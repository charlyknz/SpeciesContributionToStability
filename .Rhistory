theme(strip.text.x = element_text(color = 'white'),
strip.background =element_rect(fill = 'white', linetype = 0))+
theme(text = element_text(size = 16)) +  theme(legend.position="")
Dom3pi#ggsave(plot = RRpi, 'RRPi.png',width = 8, height = 4)
par(mar=c (5.1, 4.1, 4.1, 2.1))
ggarrange(Dom1R,Dom1pi, Dom2R,Dom2pi,Dom3R,Dom3pi,hjust = -1, ncol = 2, nrow = 3)
ggsave(plot = last_plot(), width = 12, height = 12, file = here('output/Fig.3_Dominance_allDist.png'))
### Code for analyzing species stability
rm(list=ls())
graphics.off()
# the following libraries are needed
# please add all of them if they are not installed yet
library(cowplot)
library(tidyverse)
library(GGally)
library(MESS)
library(here)
#### load data ####
zoo <- read.csv2("SITES_Data/zooplankton.csv", sep=";")
str(zoo)
names(zoo)
#### size data ####
zoo.size <- zoo %>%
mutate(size = Mean_lenght*1000) %>% #convert size into um
group_by(Zooplankton_group, Treatment, Taxa ) %>%
summarise(
mean.size = mean(size, na.rm = T),
sd.size = sd(size, na.rm = T)) %>%
arrange(Treatment, desc(mean.size)) %>%
filter(!Taxa %in% c('small Cladoceran', 'Nauplii'))
write.csv(zoo.size, file = here('SITES_Data/zooplanktonMeanLength.csv'))
#### Biomass based Analysis ####
zoo <- zoo %>%
dplyr::select( -Biomass) %>%
dplyr::mutate(Clean_Biomass = as.numeric(Clean_Biomass)) %>%
dplyr::rename(Biomass = Clean_Biomass)
zoo$Biomass[zoo$Biomass == 0 & is.na(zoo$Abundance)] <- NA
#some changes to the data
#reduce to experimental subset
zoo.data <- dplyr::filter(zoo, Treatment != 'Lake')
#make sure lakes are named correctly, always using first three letters for abbreviation
levels(zoo.data$Lake)[levels(zoo.data$Lake)=="Asa"] <- "Fer"    # Feresjoen
levels(zoo.data$Lake)[levels(zoo.data$Lake)=="Sko"] <- "Ers"    # Erssjoen
levels(zoo.data$Lake)[levels(zoo.data$Lake)=="Sva"] <- "Sto"    # Storjaen
#extract the control data and merge as an extra variable
con.zoo <- dplyr::filter(zoo.data, Treatment=="C")
con.zoo <-  dplyr::rename(con.zoo, "con.bio"= "Biomass")                                    # con.bio  -->  Biomass
#calculate mean biomass in control dataset
con.zoo <- con.zoo %>%
dplyr::group_by(Lake, Experiment, Sampling, Taxa) %>%
dplyr::summarise(con.bio = mean(con.bio, na.rm = T))
#bringing in the control data to the main data
zoo.data2 <- merge(zoo.data,con.zoo, by = c("Lake","Experiment",                  # keeping data from the second (right) table and joins anything
"Sampling","Taxa"))               # that matches from the first (left) table.
# take out the control rows
zoo.data2 <- dplyr::filter(zoo.data2, Treatment!="C")
# for comparison, calculate the overall response                                    ## data.tot -> Total Response on Forcing
zoo.data.tot<-zoo.data2%>%
dplyr::group_by(Lake, Experiment, Sampling, Treatment, Replicate) %>%
dplyr:: summarise(treat.tot = sum(Biomass, na.rm = T),
con.tot = sum(con.bio, na.rm = T))
# LRR (Log Response Ratio) of community
zoo.data.tot$LRR.tot<-log(zoo.data.tot$treat.tot/zoo.data.tot$con.tot)
zoo.data.tot$deltabm.tot<-(zoo.data.tot$treat.tot-zoo.data.tot$con.tot)/(zoo.data.tot$treat.tot+zoo.data.tot$con.tot)
hist(zoo.data.tot$LRR.tot)
hist(zoo.data.tot$deltabm.tot)
#create data set for species specific effect sizes
#take out those rows where biomass is 0 in both treatment (Biomass) + control (con.bio)
zoo.data3 <- zoo.data2 %>%
dplyr::left_join(.,zoo.data.tot, by = c("Lake","Experiment","Sampling","Replicate","Treatment"))
zoo.data3$RR <- zoo.data3$Biomass+zoo.data3$con.bio
zoo.data3 <- dplyr::filter(zoo.data3, RR!=0)
# create species specific Log Response Ratio (LRR) for biomass
zoo.data3$LRR<-log(zoo.data3$Biomass/zoo.data3$con.bio)
# create species specific change in biomass  (RR)
zoo.data3$RR<-(zoo.data3$Biomass-zoo.data3$con.bio)/(zoo.data3$Biomass+zoo.data3$con.bio)
# the absence of species in control or treatment creates INF, get rid of these
zoo.data3$LRR[zoo.data3$LRR=="Inf"]<-NA
zoo.data3$LRR[zoo.data3$LRR=="-Inf"]<-NA
# create species specific contribution (pi) to biomass for control and treat  (treat / tot)         ## contribution
zoo.data3$treat.pi <- zoo.data3$Biomass/zoo.data3$treat.tot
zoo.data3$con.pi <- zoo.data3$con.bio/zoo.data3$con.tot
# create species specific LRR and difference for pi           (delta pi)
zoo.data3$delta.pi <- zoo.data3$treat.pi-zoo.data3$con.pi
# weight LRR  -  mean pi
zoo.data3$mean.pi <- 0.5*(zoo.data3$treat.pi+zoo.data3$con.pi)
zoo.data3$LRR.w <- zoo.data3$LRR*zoo.data3$mean.pi
zoo.data3$RR.w <- zoo.data3$RR*zoo.data3$mean.pi
# create the deviance between species and community effect sizes
zoo.data3$LRR.diff <- zoo.data3$LRR-zoo.data3$LRR.tot
zoo.data3$LRR.diff.w <- zoo.data3$LRR.diff*zoo.data3$mean.pi
# differentiate the most dominant species
zoo.mean.dom <- zoo.data3 %>%
dplyr:: group_by(Taxa) %>%
dplyr:: summarise(mean=mean(mean.pi, na.rm = T))
zoo.mean.dom$dom <- zoo.mean.dom$mean  #*zoo.mean.dom$length
zoo.data3 <- merge(zoo.data3, dplyr::select(zoo.mean.dom, -mean), by = c("Taxa"))
hist(zoo.data3$dom)
str(zoo.data3)
# create mean and standard deviation for community LRR
zoo.tot.mn <- zoo.data.tot %>%
dplyr::group_by(Lake, Experiment, Sampling, Treatment) %>%
dplyr:: summarise(LRR.mean=mean(LRR.tot, na.rm = T),
LRR.sd=sd(LRR.tot, na.rm = T))
zoo.data3 <- merge(zoo.data3,zoo.tot.mn, by = c("Lake","Experiment","Sampling","Treatment"))
summary(zoo.data3)
unique(zoo.data3$Taxa)
####  AUC Metrics  ###
# collapse variation between replicates
zoo.data3.mn <- zoo.data3 %>%
dplyr::group_by(Lake, Treatment, Experiment, Taxa, Exp_day, Sampling) %>%
dplyr::summarise(across(c(Biomass:LRR.sd), mean))
#### AUC Loop ####
names(zoo.data3)
zoo.cols <- c("Lake","Experiment","Treatment","Taxa","Replicate")
zoo.data3 <- zoo.data3 %>%
dplyr::mutate(USI = paste(Lake, Experiment, Taxa, Replicate, Treatment, sep = "_"))     #create unique ID
#order data by day to start with 0
zoo.data3 <- zoo.data3[order(zoo.data3$Exp_day),]
names(zoo.data3)
#create an empty data frame (then our loop is faster)
zoo.stab.auc <- data.frame()
# the following loops cycle through all unique cases (USI)
# Zooplankton
USI <- unique(zoo.data3$USI)
for(i in 1:length(USI)){
temp<-zoo.data3[zoo.data3$USI==USI[i], ]#creates a temporary data frame for each case
if(dim(temp)[1]>2){#does the next step only if at least 3 data points are present
AUC.RR<-auc(temp$Exp_day, temp$RR,  from = min(0, na.rm = TRUE), to = max(temp$Exp_day, na.rm = TRUE),
type = c("spline"),absolutearea = FALSE)
AUC.pi<-auc(temp$Exp_day, temp$delta.pi, from = min(0, na.rm = TRUE), to = max(temp$Exp_day, na.rm = TRUE),
type = c("spline"),absolutearea = FALSE)
AUC.totRR<-auc(temp$Exp_day, temp$deltabm.tot, from = min(0, na.rm = TRUE), to = max(temp$Exp_day, na.rm = TRUE),
type = c("spline"),absolutearea = FALSE)
AUC.LRR<-auc(temp$Exp_day, temp$LRR.mean, from = min(0, na.rm = TRUE), to = max(temp$Exp_day, na.rm = TRUE),
type = c("spline"),absolutearea = FALSE)
mean.delta.pi<-mean(temp$delta.pi)
mean.RR<-mean(temp$RR)
mean.pi<-mean(temp$mean.pi)
sd.delta.pi<-sd(temp$delta.pi)
sd.RR<-sd(temp$RR)
zoo.stab.auc<-rbind(zoo.stab.auc,
data.frame(temp[1,c(1,2,4,5,8,9,10,11,25,27,28,34)],
AUC.RR,
AUC.pi,
AUC.totRR,
AUC.LRR,
mean.delta.pi,
mean.RR,
mean.pi,
sd.delta.pi,
sd.RR))
rm(temp)
}
}
summary(zoo.stab.auc)
unique(zoo.stab.auc$Taxa)
# adding mean.AUC.RR/pi and sd.AUC.RR/pi to Loop Output
#collapse between replicates here.
zoo.stab.auc.prefin <- zoo.stab.auc %>%
filter(!Taxa %in% c("Nauplii", "Small cladoceran"))
unique(zoo.stab.auc.prefin$Taxa)
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Lake == "Asa", "Lake"] <- "Feresjörn"
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Lake == "Erk", "Lake"] <- "Erken"
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Lake == "Sva", "Lake"] <- "Storjärn"
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Lake == "Sko", "Lake"] <- "Erssjön"
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Lake == "Bol", "Lake"] <- "Bolmen"
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Treatment == "F", "Treatment"] <- "Pulse"
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Treatment == "FS", "Treatment"] <- "Pulse & Press"
zoo.stab.auc.prefin[zoo.stab.auc.prefin$Treatment == "S", "Treatment"] <- "Press"
#write.csv2(zoo.stab.auc.prefin, 'AUCdata_biom.csv')
unique(zoo.stab.auc.prefin$Taxa)
ggplot(distinct(zoo.stab.auc.prefin, AUC.pi, AUC.RR, Replicate, AUC.RR,AUC.pi, dom, Experiment,Treatment, Taxa, Lake), aes(AUC.pi, AUC.RR,color = Taxa )) +
geom_point(aes(shape = as.factor(Experiment),size = dom), alpha = 0.5) +
geom_vline(xintercept = 0, alpha = 0.25) +
geom_hline(yintercept = 0, alpha = 0.25) +
facet_grid(Lake~Treatment, scales = 'free') +
ggtitle('Trophy Level: Zooplankton n = 20')+
xlim(c(-18, 18)) +
ylim(c(-20, 20)) +
labs(x = expression(AUC.~Delta~'pi'~'('~Compositional~Stability~')'), y = "Functional Stability (AUC.RR)", shape = 'Exp') +
theme_bw()+
theme(legend.position = 'right')+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10, face = "bold", colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10, face = "bold", colour = "black", angle = 0, hjust = 0.4)) +
theme(plot.title = element_text(size=14),
plot.subtitle = element_text(size=13),
legend.title = element_text(size = 15),
legend.text = element_text(size = 6)) +
guides(color = guide_legend(override.aes = list(size = 3.5)))
#ggsave(plot = last_plot(), file = here('output/ZooAUC_reps.png'), width = 10, height = 8)
#### group only after disturbances or species for RADs####
zoo.stab.auc.prefin1 <- zoo.stab.auc.prefin %>%
dplyr::group_by(Taxa, Lake,Experiment, Treatment, dom) %>% # for single dots use mutate here!!
dplyr::mutate(mean.AUC.RR = mean(AUC.RR, na.rm = T),
mean.AUC.pi = mean(AUC.pi, na.rm = T),
sd.AUC.RR = sd(AUC.RR, na.rm = T),
sd.AUC.pi = sd(AUC.pi, na.rm = T),
se.AUC.RR = sd.AUC.RR/sqrt(n()),
se.AUC.pi = sd.AUC.pi/sqrt(n())) %>%
group_by(Taxa) %>%
mutate(mean.dom = mean(con.pi))%>%
filter(!Taxa %in% c("Nauplii", "Small cladoceran"))
#### plot with errorbars###
zoo.stab.auc.prefin1$Experiment[zoo.stab.auc.prefin1$Experiment == 1] <- 'spring'
zoo.stab.auc.prefin1$Experiment[zoo.stab.auc.prefin1$Experiment == 2] <- 'summer'
zoo.stab.auc.prefin1%>%
distinct(mean.AUC.pi, mean.AUC.RR, se.AUC.pi, se.AUC.RR, Treatment, Taxa, Experiment,Lake,mean.dom)  %>%
ggplot(.,aes(mean.AUC.pi, mean.AUC.RR,color = Taxa )) +
geom_point(aes(shape = as.factor(Experiment), size = mean.dom), alpha = 0.5) +
geom_errorbarh(aes(xmax = mean.AUC.pi + se.AUC.pi, xmin = mean.AUC.pi - se.AUC.pi))+
geom_errorbar(aes(ymax = mean.AUC.RR + se.AUC.RR, ymin = mean.AUC.RR - se.AUC.RR))+
geom_vline(xintercept = 0, alpha = 0.25) +
geom_hline(yintercept = 0, alpha = 0.25) +
facet_grid(Lake~Treatment, scales = 'free') +
labs(y = 'Absolute contribution to stability', x = "Relative contribution to stability", size = 'Dominance', shape = 'Season') +
theme_bw()+
theme(legend.position = 'right')+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(axis.title.x = element_text(size = 16,face = "plain", colour = "black", vjust = 0),
axis.text.x = element_text(size = 10, face = "bold", colour = "black", angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_text(size = 16, face = "plain", colour = "black", vjust = 1.8),
axis.text.y = element_text(size = 10, face = "bold", colour = "black", angle = 0, hjust = 0.4)) +
theme(plot.title = element_text(size=14),
plot.subtitle = element_text(size=13),
legend.title = element_text(size = 15),
legend.text = element_text(size = 6)) +
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 12, face = 'bold'))+
guides(color = guide_legend(override.aes = list(size = 3.5)))
ggsave(plot = last_plot(), file = here('output/Fig4.png'),width = 12, height = 8)
### Fig. 5 c,d ###
AUC.pi.size <- ggplot(subset(zoo.with.traits, AUC.stability == 'AUC.pi'), aes(x = mean.size, y=AUC.value, color = trend))+
geom_point(alpha = .2)+
geom_point(aes( x= mean.size, y= mean.value, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = mean.size, ymin = mean.value-se.value, ymax = mean.value+se.value,color = mean.trend), width = .1, color = 'black')+
# geom_text(aes(x = mean.size,y = mean.value, label = Taxa), nudge_x = 0.05,nudge_y = 15,vjust = 0,color = "grey30" ,size = 2.5, angle = 85) +
scale_color_manual(values = c('#D56060', '#68789E'))+
scale_fill_manual(values = c('#D56060', 'grey','#68789E'))+
scale_x_log10(limits = c(40, 3200),breaks = c(100, 300, 1000, 3000))+
geom_hline(yintercept = 0, alpha = 0.5) +
labs(x = "size (in µm on Ln-transformed scale)", y = 'Relative contribution to stability') +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_blank(),
legend.position = "none",
#legend.background = element_rect(linetype = "solid", colour = "grey", size = 1),
legend.key.size = unit(1, "cm"))+
theme(strip.text.x = element_text(color = 'white'),
strip.background =element_rect(fill = 'white', linetype = 0))
### Fig. 5 a,b ###
AUC.RR_dom <- ggplot(subset(zoo.with.traits, AUC.stability == 'AUC.RR'), aes(x = ranking.by.mean.pi, y= AUC.value, color = trend))+
geom_point(alpha = .2)+
geom_point(aes( x= ranking.by.mean.pi, y= mean.value, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = ranking.by.mean.pi, ymin = mean.value-se.value, ymax = mean.value+se.value,color = mean.trend), width = .8, color = 'black')+
geom_text(aes(x = ranking.by.mean.pi,y = mean.value, label = Taxa), nudge_y = 20, vjust = 1,color = "grey30" ,size = 3, angle = 85) +
scale_color_manual(values = c('#D56060',  '#68789E'))+
scale_fill_manual(values = c('#D56060', 'grey','#68789E'))+
geom_hline(yintercept = 0, alpha = 0.8) +
scale_x_continuous(limits = c(0.5,18.5 ), breaks = seq(1,18,2))+
# scale_color_manual(values = c('#A9A9A9', '#000000'))+
# scale_shape_manual(values = c(16, 1))+
labs(x = "Dominance ranking", y = 'Absolute contribution to stability') +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),
legend.title = element_blank(),
legend.position = "none",
#legend.background = element_rect(linetype = "solid", colour = "grey", size = 1),
legend.key.size = unit(1, "cm"))+
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 16, face = 'bold'))
AUC.RR_dom
#### packages ####
library(tidyverse)
library(nlme)
library(lmerTest)
library(performance)
library(see)
library(readxl)
library("ggsci")
library(ggpubr)
#### check data ####
names(zoo.stab.auc.prefin)
str(zoo.stab.auc.prefin)
names(zoo.data3)
# check data levels
levels(as.factor(zoo.stab.auc.prefin$Taxa))
sapply(lapply(zoo.stab.auc.prefin, unique), length)
hist(zoo.stab.auc.prefin$AUC.pi)
hist(zoo.stab.auc.prefin$AUC.RR)
#change variables to factors for analysis
zoo.stab.auc.prefin$Experiment <- as.factor(zoo.stab.auc.prefin$Experiment)
zoo.stab.auc.prefin$Treatment <- as.factor(zoo.stab.auc.prefin$Treatment)
zoo.stab.auc.prefin$Lake <- as.factor(zoo.stab.auc.prefin$Lake)
#remove entries with NA
which(is.na(zoo.stab.auc.prefin))
zoo.stab.auc.prefin  <-zoo.stab.auc.prefin%>%
drop_na(AUC.RR, AUC.pi)
### barplot of species' mean.pi pre- and past-disturbance ###
zoo.data3 %>%
select(Lake, Experiment, Exp_day, Treatment, Taxa, mean.pi) %>%
mutate(disturbance = paste(ifelse(Exp_day < 7, 'pre-dist', 'past-dist'))) %>%
dplyr::group_by(Taxa, disturbance) %>%
dplyr::summarise(mean = mean(mean.pi))%>%
arrange(desc(mean))%>%
filter(mean >0.1) %>%
ggplot(., aes(x = disturbance, y = mean, fill = Taxa))+
geom_col(color = 'black')
# 1. ranking
zoo.dummy.con <- zoo.data3 %>%
select(Lake, Experiment, Exp_day, Treatment, Taxa, con.pi, Abundance, Biomass, USI) %>%
mutate(one = as.numeric(paste(1)) )%>%
add_count(USI, wt = one) %>% # count number of occurrences in data
dplyr::group_by(Taxa) %>%
filter(n > 2) %>%  #remove species which are not present in stab.auc dataset
filter(!Taxa %in% c("Nauplii", "Small cladoceran")) %>%
dplyr::summarise(mean = mean(con.pi))%>%
mutate(ranking.by.mean.pi =  rank(dplyr::desc(mean))) %>%
dplyr::arrange( ranking.by.mean.pi)
# 2. join datasets and calculate mean auc
zoo.effect.plot <- left_join(zoo.stab.auc.prefin, zoo.dummy.con, by = c("Taxa"))  %>%                                              # ranked by mean.pi
gather('AUC.pi','AUC.RR', key = "AUC.stability", value = "AUC.value") %>%
dplyr::group_by(Taxa, Treatment, ranking.by.mean.pi, AUC.stability) %>%
dplyr::mutate(mean.value = mean(AUC.value),
sd.AUC = sd(AUC.value),
se.value = sd.AUC/sqrt(n())) %>%
mutate(trend = ifelse(AUC.value < 0, 'negative', 'positive')) %>%
mutate(mean.trend = ifelse(mean.value < -0.1, 'negative', ifelse(mean.value > 0.1, 'positive', 'neutral')))
names(zoo.effect.plot)
#### zoo traits ####
zoo.feeding <- read_excel("SITES_Data/collectedZooplanktonFeedingMode.xlsx")
names(zoo.feeding)
zoo.feeding$Treatment[zoo.feeding$Treatment == "F" ]<- "Pulse"
zoo.feeding$Treatment[zoo.feeding$Treatment == "FS"] <- "Pulse & Press"
zoo.feeding$Treatment[zoo.feeding$Treatment == "S"] <- "Press"
unique(zoo.feeding$consumption_mode)
levels(as.factor(zoo.effect.plot$mean.trend))
#### size data ####
zoo.size <- read_csv("SITES_Data/zooplanktonMeanLength.csv") %>%
select(-...1  )
names(zoo.size)
zoo.size$Treatment[zoo.size$Treatment == "F" ]<- "Pulse"
zoo.size$Treatment[zoo.size$Treatment == "FS"] <- "Pulse & Press"
zoo.size$Treatment[zoo.size$Treatment == "S"] <- "Press"
#### join size with RAD data ####
names(zoo.effect.plot)
names(zoo.feeding)
zoo.with.traits <- left_join(zoo.effect.plot, zoo.feeding, by =c("Taxa", "Treatment",'Zooplankton_group' ))
zoo.with.traits <- left_join(zoo.with.traits, zoo.size, by = c("Taxa", "Treatment", 'Zooplankton_group' )) #%>%
names(zoo.with.traits)
#### correlation plot ####
corr_size_AUCpi <- zoo.with.traits %>%
mutate(log.size = log10(mean.size)) %>%
filter(AUC.stability != 'AUC.RR') %>%
ggscatter(., x = 'log.size', y = 'AUC.value',add = 'reg.line', conf.int = T, xlab = 'size (logartihmized scale)', ylab='Relative contribution to stability' ) +
stat_cor( label.x = 1.8)           # Add correlation coefficient
corr_size_AUCrr <- zoo.with.traits %>%
mutate(log.size = log10(mean.size)) %>%
filter(AUC.stability == 'AUC.RR') %>%
ggscatter(., x = 'log.size', y = 'AUC.value',add = 'reg.line', conf.int = T, xlab = 'size (logartihmized scale)', ylab='Absolute contribution to stability' ) +
stat_cor( label.x = 1.8)           # Add correlation coefficient
plot_grid(corr_size_AUCpi, corr_size_AUCrr, labels = c('(a)', '(b)'))
ggsave(plot = last_plot(), file = here('output/Supplement_correlation_size_stability.png'), width = 8, height = 4)
### Fig. 5 a,b ###
AUC.RR_dom <- ggplot(subset(zoo.with.traits, AUC.stability == 'AUC.RR'), aes(x = ranking.by.mean.pi, y= AUC.value, color = trend))+
geom_point(alpha = .2)+
geom_point(aes( x= ranking.by.mean.pi, y= mean.value, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = ranking.by.mean.pi, ymin = mean.value-se.value, ymax = mean.value+se.value,color = mean.trend), width = .8, color = 'black')+
geom_text(aes(x = ranking.by.mean.pi,y = mean.value, label = Taxa), nudge_y = 20, vjust = 1,color = "grey30" ,size = 3, angle = 85) +
scale_color_manual(values = c('#D56060',  '#68789E'))+
scale_fill_manual(values = c('#D56060', 'grey','#68789E'))+
geom_hline(yintercept = 0, alpha = 0.8) +
scale_x_continuous(limits = c(0.5,18.5 ), breaks = seq(1,18,2))+
# scale_color_manual(values = c('#A9A9A9', '#000000'))+
# scale_shape_manual(values = c(16, 1))+
labs(x = "Dominance ranking", y = 'Absolute contribution to stability') +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),
legend.title = element_blank(),
legend.position = "none",
#legend.background = element_rect(linetype = "solid", colour = "grey", size = 1),
legend.key.size = unit(1, "cm"))+
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 16, face = 'bold'))
AUC.RR_dom
AUC.pi_dom <- ggplot(subset(zoo.with.traits, AUC.stability == 'AUC.pi'), aes(x = ranking.by.mean.pi, y= AUC.value, color = trend))+
geom_point(alpha = .2)+
geom_point(aes( x= ranking.by.mean.pi, y= mean.value, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = ranking.by.mean.pi, ymin = mean.value-se.value, ymax = mean.value+se.value,color = mean.trend), width = .8, color = 'black')+
geom_text(aes(x = ranking.by.mean.pi,y = mean.value, label = Taxa),  nudge_y = 10,vjust = 1,color = "grey30" ,size = 3, angle = 85) +
scale_color_manual(values = c('#D56060', '#68789E'))+
scale_fill_manual(values = c('#D56060', 'grey','#68789E'))+
geom_hline(yintercept = 0, alpha = .8) +
scale_x_continuous(limits = c(0.5,18.5 ), breaks = seq(1,18,2))+
# scale_color_manual(values = c('#A9A9A9', '#000000'))+
# scale_shape_manual(values = c(16, 1))+
labs(x = "Dominance ranking", y = 'Relative contribution to stability') +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_blank(),
legend.position = "none",
#legend.background = element_rect(linetype = "solid", colour = "grey", size = 1),
legend.key.size = unit(1, "cm"))+
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 16, face = 'bold'))
AUC.pi_dom
### Fig. 5 c,d ###
AUC.pi.size <- ggplot(subset(zoo.with.traits, AUC.stability == 'AUC.pi'), aes(x = mean.size, y=AUC.value, color = trend))+
geom_point(alpha = .2)+
geom_point(aes( x= mean.size, y= mean.value, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = mean.size, ymin = mean.value-se.value, ymax = mean.value+se.value,color = mean.trend), width = .1, color = 'black')+
# geom_text(aes(x = mean.size,y = mean.value, label = Taxa), nudge_x = 0.05,nudge_y = 15,vjust = 0,color = "grey30" ,size = 2.5, angle = 85) +
scale_color_manual(values = c('#D56060', '#68789E'))+
scale_fill_manual(values = c('#D56060', 'grey','#68789E'))+
scale_x_log10(limits = c(40, 3200),breaks = c(100, 300, 1000, 3000))+
geom_hline(yintercept = 0, alpha = 0.5) +
labs(x = "size (in µm on Ln-transformed scale)", y = 'Relative contribution to stability') +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_blank(),
legend.position = "none",
#legend.background = element_rect(linetype = "solid", colour = "grey", size = 1),
legend.key.size = unit(1, "cm"))+
theme(strip.text.x = element_text(color = 'white'),
strip.background =element_rect(fill = 'white', linetype = 0))
AUC.pi.size
AUC.rr.size <- ggplot(subset(zoo.with.traits, AUC.stability == 'AUC.RR'), aes(x = mean.size, y=AUC.value, color = trend))+
geom_point(alpha = .2)+
geom_point(aes( x= mean.size, y= mean.value, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = mean.size, ymin = mean.value-se.value, ymax = mean.value+se.value,color = mean.trend), width = .1, color = 'black')+
# geom_text(aes(x = mean.size,y = mean.value, label = Taxa), nudge_x = 0.1,nudge_y = 15,vjust = 0,color = "grey30" ,size = 2.5, angle = 85) +
scale_color_manual(values = c('#D56060', '#68789E'))+
scale_fill_manual(values = c('#D56060','grey', '#68789E'))+
geom_hline(yintercept = 0, alpha = 0.5) +
scale_x_log10()+
labs(x = "size (in µm on Ln-transformed scale)", y = 'Absolute contribution to stability') +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_blank(),
legend.position = "none",
legend.key.size = unit(1, "cm"))+
theme(strip.text.x = element_text(color = 'white'),
strip.background =element_rect(fill = 'white', linetype = 0))
AUC.rr.size
### all Fig. 5 ###
plot_grid(AUC.RR_dom, AUC.pi_dom, AUC.rr.size, AUC.pi.size,ncol = 2,hjust = -1.1,labels = c('(a)','(b)', '(c)', '(d)'),rel_widths = c(1,1))
ggsave(plot = last_plot(), width = 12, height = 8, file = here('output/Fig5.png'))
### Supplement Fig. 5 ###
levels(zoo.with.traits$consumption_mode) <- c("omnivore", "Omnivore, carnivore" ,"Omnivore, herbivore",  "herbivore","zooplanktivore")
AUC.rr.ft <- zoo.with.traits %>%
filter( AUC.stability == 'AUC.RR') %>%
group_by(consumption_mode, AUC.stability) %>%
mutate(mean = mean(AUC.value, na.rm  = T),
sd = sd(AUC.value, na.rm  = T),
se = sd/sqrt(n())) %>%
mutate(mean.trend = ifelse(mean < 0, 'negative', ifelse(mean> 0.1,'positive', 'neutral')))%>%
ggplot(., aes(x = consumption_mode, y=AUC.value, color = trend))+
geom_point(alpha = .3)+
geom_point(aes( x= consumption_mode, y= mean, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = consumption_mode, ymin = mean-se, ymax = mean+se,color = mean.trend), width = .2, color = 'black')+
scale_color_manual(values = c('#D56060', '#68789E', 'grey'))+
scale_fill_manual(values = c('#D56060', '#68789E', 'grey'))+
geom_hline(yintercept = 0, alpha = 0.5) +
labs(x = "Feeding mode", y = 'AUC.RR (Functional Stability)') +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_blank(),
legend.position = "none",
#legend.background = element_rect(linetype = "solid", colour = "grey", size = 1),
legend.key.size = unit(1, "cm"))+
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 13, face = 'bold'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
AUC.rr.ft
AUC.pi.ft<- zoo.with.traits %>%
filter( AUC.stability == 'AUC.pi') %>%
group_by(consumption_mode, AUC.stability) %>%
mutate(mean = mean(AUC.value, na.rm  = T),
sd = sd(AUC.value, na.rm  = T),
se = sd/sqrt(n())) %>%
mutate(mean.trend = ifelse(mean < -0.1, 'negative', ifelse(mean> 0.1,'positive', 'neutral')))%>%
ggplot(., aes(x = consumption_mode, y=AUC.value, color = trend))+
geom_point(alpha = .3)+
geom_point(aes( x= consumption_mode, y= mean, fill = mean.trend), size = 3, pch = 21, color = 'black') +
geom_errorbar(aes(x = consumption_mode, ymin = mean-se, ymax = mean+se,color = mean.trend), width = .2, color = 'black')+
scale_color_manual(values = c('grey', '#68789E'))+
scale_fill_manual(values = c('grey','#68789E'))+
geom_hline(yintercept = 0, alpha = 0.5) +
labs(x = "Feeding mode", y =  expression(AUC.~Delta~'pi'~'('~Compositional~Stability~')')) +
theme_bw() +
facet_grid(~Treatment)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
theme(legend.title = element_blank(),
legend.position = "none",
#legend.background = element_rect(linetype = "solid", colour = "grey", size = 1),
legend.key.size = unit(1, "cm"))+
theme(strip.background =element_rect(),
strip.text.x  = element_text(size = 13, face = 'bold'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
AUC.pi.ft
plot_grid(AUC.rr.ft, AUC.pi.ft, ncol = 2,hjust = -1.1,labels = c('(a)','(b)', '(c)', '(d)'),rel_widths = c(1,1))
ggsave(plot = last_plot(), width = 9, height = 4, file = here('output/Supplement_AUCfeedingMode.png'))
